#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ld long double
#define sout(x) cout << #x << " is : " << x << '\n';
#define pqmax priority_queue<ll>
#define pqmin priority_queue<ll, vt<ll>, greater<ll>>
#define setbits(x) __builtin_popcountll(x)
#define ps(x, y) fixed << setprecision(y) << x
#define EACH(x, a) for (auto &x : a)
#define FOR(var, start, end) for (int var = start; var <= end; var++)
#define tc()  \
    int t;    \
    cin >> t; \
    while (t--)
const ll modo = 1e9 + 7;
const ll INF = 1e17;
const ll ms = 1e5 + 5;
void cp()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

int getIndex(vector<int> v, int K)
{
    auto it = find(v.begin(), v.end(), K);
    if (it != v.end())
    {
        int index = it - v.begin();
        return index;
    }
    else
    {
        return -1;
    }
}
int main()
{
    clock_t begin = clock();

    cp();
    tc()
    {
        ll n, count = 0;
        cin >> n;

        vector<int> a;
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            a.push_back(x);
        }

        vector<int> pos(n);
        FOR(i, 0, n - 1)
        {
            pos[i] = i;
        }

        vector<int> l;
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            l.push_back(x);
        }

        vector<int> b(n);
        FOR(i, 0, n - 1)
        b[i] = a[i];
        sort(b.begin(), b.end());

        FOR(j, 1, n - 1)
        {
            int index = getIndex(a, b[j]);
            int p = pos[getIndex(a, b[j - 1])];
            int c = index;

            while (c <= p)
            {
                c += l[index];
                pos[index] = c;
                count++;
            }
        }
        cout << count << endl;
    }

#ifndef ONLINE_JUDGE
    clock_t end = clock();
    cout << "\n\nExecuted In : " << double(end - begin) / CLOCKS_PER_SEC * 1000 << " ms";
#endif
    return 0;
}