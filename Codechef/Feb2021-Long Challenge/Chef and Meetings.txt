#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ld long double
#define sout(x) cout << #x << " is : " << x << '\n';
#define pqmax priority_queue<ll>
#define pqmin priority_queue<ll, vt<ll>, greater<ll>>
#define setbits(x) __builtin_popcountll(x)
#define ps(x, y) fixed << setprecision(y) << x
#define EACH(x, a) for (auto &x : a)
#define FOR(var, start, size) for (ll var = start; var < size; var++)
#define tc()  \
    int t;    \
    cin >> t; \
    while (t--)
const ll modo = 1e9 + 7;
const ll INF = 1e17;
const char nl = '\n';
const ll ms = 1e5 + 5;
void cp()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
double solve1(string x)
{
    string fh, sh;
    fh = x.substr(0, 5);
    sh = x.substr(6, 2);
    // cout << fh << endl << sh;
    string conversion;
    if (sh == "AM")
    {
        if (fh.substr(0, 2) == "12")
            conversion += '0';
        else
            conversion += fh.substr(0, 2);
        conversion += '.';
        conversion += fh.substr(3, 2);
    }
    else if (sh == "PM")
    {
        if (fh.substr(0, 2) == "12")
            conversion += "12";
        else
        {
            int t = stoi(fh.substr(0, 2)) + 12;
            conversion += to_string(t);
        }
        conversion += '.';
        conversion += fh.substr(3, 2);
    }
    double ans = atof(conversion.c_str());
    return ans;
}
bool solve2(double li, double ri, double p)
{
    return (li <= p and p <= ri) ? true : false;
}

int main()
{
    clock_t begin = clock();
    cp();
    int tc;
    cin >> tc;
    cin.ignore();
    while (tc--)
    {
        int n;
        string p = "";
        double pa;
        getline(cin, p);
        int x = p.length();
        pa = solve1(p);
        cin >> n;
        cin.ignore();
        FOR(i, 0, n)
        {
            string x;
            getline(cin, x);
            // cout << x;
            string li, ri;
            li = x.substr(0, 8);
            ri = x.substr(9, 8);
            // cout << li << endl << ri << nl;
            // cout << li.length() << endl << ri.length() << endl;
            double la = solve1(li);
            double ra = solve1(ri);
            cout << solve2(la, ra, pa);
        }
        cout << nl;
    }

#ifndef ONLINE_JUDGE
    clock_t end = clock();
    cout << "\n\nExecuted In : " << double(end - begin) / CLOCKS_PER_SEC * 1000 << " ms";
#endif
    return 0;
}